@import (reference) "/lib/bower_components/bootstrap/less/mixins";

@import "./textEditor/textEditor";

@app-color: #CCC;
@app-gap: .5em;
@app-border: 1px solid black;
@glyph-outline: 1px solid rgba(0, 0, 0, .1);

html {
    font-family: monospace;
    background-color: @app-color;
    overflow-y: scroll;
}
body {
    margin: 0;
    padding: 0 3em;
}

.compatibility-info {
    background: orange;
    color: white;
    border: .5em solid red;
    padding: 1em;
}
.compatibility-info pre {
    background: black;
    padding: .5em;
}


body.dependencies-ready .compatibility-info{
    display: none;
}


red-pill {
    display: none;
}
body.dependencies-ready red-pill{
    display: block;
}

red-pill label {
    display: block;
}

red-pill label select {
    vertical-align: top;
}

red-pill {
    color: black;
    border: @app-border;
    padding: @app-gap;
    background: white;
}


mtk-red-pill-glyphs {
    display:block;
    width: 100%;
}
.hasEditor mtk-red-pill-glyphs {
    width: calc(~"100% - 450px");
}


mtk-red-pill-glyphs label{
    display: inline;
    vertical-align: bottom;
}

mtk-red-pill-glyphs label:first-child{
    margin-left: @app-gap;
}

mtk-red-pill-glyphs > label > * {
    vertical-align: middle;
}

mtk-red-pill-glyph {
    display: block;
    overflow: visible;
    height: 100%;

    position: relative;
    span.particulars {
        position: absolute;
        display: inline-block;
        white-space: nowrap;
        top: 0
        left: 0;
        width: 0;
        overflow: hidden;
        background: lightyellow
    }

    svg {
        outline: @glyph-outline;
        height: 100%;
    }

    svg g.layer-centerline {
        fill: none;
        stroke: lime;
        stroke-width: 0.5;
    }
    svg g.layer-outline {
        fill: black;
        stroke: white;
        stroke-width: 0.5;
        /* disabled for now, we should have a switch for this in the ui */
        stroke: none;
    }
    svg g.component {
        fill: #333;
        opacity: 0.9;
        stroke: none;
    }
}

mtk-red-pill-glyph:hover span.particulars {
    width: auto;
    z-index: 100;
}

mtk-red-pill-glyphs ol{
    white-space: normal;
    padding:0;
}

mtk-red-pill-glyphs li {
    display: inline-block;
    vertical-align: top;
}

red-pill .children {
    white-space: nowrap;

    mtk-text-editor{
        width: 450px;
    }

    mtk-red-pill-glyphs,
    mtk-text-editor {
        display: inline-block;
        vertical-align: top;
    }
}

mtk-cps-panel {

    /* used as drag indicator */
    indicator {
        display: block;
        margin-left: 50px;
        max-width: 250px;
        position: relative;
        outline: 1px solid grey;
        z-index: 10;
    }

    mtk-cps-collection.root {
        display: block;
        overflow-y: scroll;
        overflow-x: auto;
        max-height: 300px;
    }

    mtk-cps-rule {
        display: block;
    }

    mtk-cps-property-dict::before {
        content: '{'
    }
    mtk-cps-property-dict::after {
        content: '}';
        display: block;
    }

    mtk-cps-property-dict {
        display: inline;
        ol {
            display: block;
            list-style: none;
            padding: 0;
            margin: 0;
            font-family: monospace;
            font-size: .9em;
            li {
                padding-left: 1em;
            }
        }
    }
    @line-height: 1.2em;
    mtk-cps-property, mtk-cps-new-property, mtk-cps-selector-list {
        line-height: @line-height; /* this is also hardcoded in the template of the textarea! */
        display: inline-block;
        border-bottom: 2px solid transparent;

        .input, .display {
            vertical-align: top;
            border: none;
            padding: 0;
            font-family: inherit;
            font-size: inherit;
            line-height: inherit;
        }

        .display {
            background: white;
        }

        .input {
            background: lightyellow;
            resize: none;
        }

        .property-name {
            color: midnightblue;
        }
        .property-value {
            color: darkgreen;
        }

        .selectorlist {
            color: maroon;
        }

        .display.property-value,
        .display.selectorlist {
            display: inline-block;
            white-space: pre;
        }

        > div {
            display: inline;
            position: relative;
        }
        .invalid {
        }
        .invalid:after {
            content: "\26A0  invalid property \26A0";
            font-family: sans-serif;
            color: red;
            white-space: nowrap;
            cursor: help;
        }
    }
    mtk-cps-property.dragging {
        background: white;
        opacity: .5;;
        mtk-cps-toolbutton {
            display: none;
        }
    }
    mtk-cps-toolbar {
        position: relative;
    }
    mtk-cps-toolbar > * {
        position: absolute;
        position: absolute;
        top: 0;
        left: 0;
        white-space: nowrap;
    }

    mtk-cps-collection {
        background-color: rgba(100, 155, 50, 0.05);
        display: block;
    }
    mtk-cps-collection > *{
        padding-left: 1em;
    }

    @tool-size: 1em;
    mtk-drag-handle,
    mtk-cps-toolbutton {
        display: inline-block;
        padding: 0;
        margin-right: .2em;
        border: none;
        background:none;
        overflow: hidden;

        width: @tool-size;
        height: @line-height;
        vertical-align: top;
        color: #ccc;
        cursor: default;
        font-family: sans-serif;
    }


    mtk-drag-handle::before,
    mtk-cps-toolbutton::before {
        display:block;
        width: 100%;
        height: 100%;
        overflow: visible;
    }
    mtk-drag-handle:hover,
    mtk-cps-toolbutton:hover {
        color: #000;
    }

    mtk-drag-handle::before {
        content: "\2B0D";
    }
    mtk-drag-handle {
        cursor: grab;
    }

    .tool-delete:hover {
        color: #f00;
    }

    .tool-delete::before {
        content: "\2717";
    }
}
